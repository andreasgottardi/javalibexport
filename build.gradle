plugins {
	id 'java'
	id 'application'
}

repositories {
	jcenter()
}

configurations {
	externalTestRun
}

mainClassName = 'javalibexport.JavaLibExport'
version = '0.0.1'

dependencies {

	implementation 'org.slf4j:slf4j-api:1.7.30'
	implementation 'ch.qos.logback:logback-core:1.2.3'
	implementation 'ch.qos.logback:logback-classic:1.2.3'
	implementation 'com.google.code.gson:gson:2.8.6'
	
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
	externalTestRun 'org.junit.platform:junit-platform-console-standalone:1.6.2'

}

test {
	useJUnitPlatform()
}

task prepareExternalTest(type: Copy, group: 'verification', description: 'Copys the offline JUnit runner to directory with compiled classes.') {
	into "${buildDir}/classes/java"
	from configurations.externalTestRun
}

task exportDependencies(type: Copy, group: 'distribution', description: 'Exports the application dependencies into a export folder.') {
	into "${buildDir}/export"
	from configurations.runtimeClasspath
}

tasks.withType(Jar) {
	destinationDirectory = file("${buildDir}/export")
}

jar {
	dependsOn exportDependencies
	manifest {
		attributes 'Main-Class': 'javalibexport.JavaLibExport'
	}
}

task writeExecScripts(group: 'build', description: 'Writes the execute scripts.'){
	dependsOn jar
	doLast {
		mkdir "${buildDir}/executables"
		new File("${buildDir}/executables", "javalibexport.bat").text = '@echo off\r\ncd %~dp0\r\njava -cp "..\\export\\*" javalibexport.JavaLibExport\r\npause'
		new File("${buildDir}/executables", "javalibexport.ps1").text = 'Set-Location "$PSScriptRoot"\r\nStart-Process -FilePath \'java\' -ArgumentList @(\'-cp\', \'..\\export\\*\', \'javalibexport.JavaLibExport\') -NoNewWindow -Wait\r\nRead-Host -Prompt \'Press enter to close the window\''
		new File("${buildDir}/executables", "javalibexport.sh").text = '#!/bin/bash\ncd "$(dirname "$0")"\njava -cp "../export/*" javalibexport.JavaLibExport\nread -s -n 1 -p "Press any key to continue..."'
	}
}

compileJava.dependsOn clean